import Head from 'next/head';
import { fromAndTo } from '../utils';
import React, { ChangeEvent, useEffect, useState } from 'react'
import loadConfig from 'next/dist/next-server/server/config';

declare var ml5: any;


export default function Home() {
  const [gradients, setGradients] = useState('');
  const [isModelReady, setIsModelReady] = useState(false);
  const [isInputDisabled, setIsInputDisabled] = useState(false);
  const [currentInput, setCurrentinput] = useState('');
  const [sentiment, setSentiment] = useState(null);
  const [hasPredicted, setHasPredicted] = useState(false)
  const [predictionScore, setPredictionScore] = useState(0)

  const modelIsReady = () => {
    setIsModelReady(true);
  }

  useEffect(() => {
    setGradients(fromAndTo());
    setSentiment(ml5.sentiment('movieReviews', modelIsReady));
  }, []);

  useEffect(() => {
    setHasPredicted(true);
  }, [predictionScore])

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    hasPredicted && setHasPredicted(false);
      setCurrentinput(event.target.value);
  }

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === 'Enter') {
      makePrediction();
    }
  }

  const makePrediction = () => {
    let score;
    if(sentiment) {
      // @ts-ignore: Object is possibly 'null'.
      let score = sentiment.predict(currentInput).score!;
      setPredictionScore(score);
    }
  }

  return (
    <div className="w-screen">
      <Head>
        <title>Glowing Octo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/apple/279/octopus_1f419.png" />
        <script src="https://unpkg.com/ml5@latest/dist/ml5.min.js"></script>
      </Head>
      <main className="w-screen h-screen md:p-48 sm:p-12">
        <div className="h-1/6" />
        <h1 className="text-4xl">
          üêô
        </h1>
        <div className="flex w-full flex-wrap">
          <h1 className="text-4xl font-extrabold mr-20">
            Welcome to the
            <br />
            {/* </h1><span className={`text-transparent bg-clip-text bg-gradient-to-br ${gradients}`}> */}
            <span className={`glowing-octo`}>
            
              {isModelReady
                ? 'glowing-octo'
                : 'loading'
              }
            </span>
            <br />sentiment checker
          </h1>
          <ul className="list-none md:mx-0">
            <li>
              <code className="font-code">1. Give Your Input</code>
            </li>
            <li>
              <code className="font-code">2. Hit enter to see your sentiment</code>
            </li>
          </ul>
          <div className="w-full">
            <input
              className='w-full bg-white focus:outline-none focus:ring focus:ring-gray-900 focus:border-gray-900 p-5 mt-5 rounded-sm'
              type="text"
              placeholder="start typing an emotionally loaded sentence"
              ref={input => input && input.focus()}
              onKeyDown={handleKeyDown}
              onChange={handleChange}
              disabled={isInputDisabled}
            />
          </div>
        </div>
        <div className="mt-5">
          {(currentInput == '' || !hasPredicted)
            ? <p>üêô longing  to feel something..</p>
            : <p>üêô feeling a
        {(predictionScore > 0.5)
                ? <span className="text-green-600"> positive </span>
                : <span className="text-red-600"> negative </span>
              }
        sentiment here!
        (I might be wrong though.)
      </p>
          }
        </div>


      </main>
    </div>
  );
}
